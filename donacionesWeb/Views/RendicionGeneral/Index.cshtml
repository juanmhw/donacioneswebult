@model List<CierreCajaViewModel>
@{
    var campañas = ViewBag.CampaniasDisponibles as List<string> ?? new();
    var query = Context.Request.Query;
    var periodoSeleccionado = query["periodo"].ToString();
    var filtroCampania = query["filtroCampania"].ToString();
    var desde = query["desde"].ToString();
    var hasta = query["hasta"].ToString();

    var periodos = new List<(string Valor, string Texto)>
    {
        ("", "-- Personalizado --"),
        ("semana", "Última semana"),
        ("mes", "Este mes"),
        ("trimestre", "Último trimestre"),
        ("anio", "Este año")
    };
}

<style>
    :root {
        --primary-coral: #FF6B4A;
        --primary-coral-dark: #E55A42;
        --primary-coral-light: #FF8A70;
        --coral-gradient: linear-gradient(135deg, #FF6B4A 0%, #FF8A70 100%);
        --text-dark: #2D3748;
        --text-muted: #718096;
        --bg-light: #F7FAFC;
        --border-light: #E2E8F0;
        --success: #48BB78;
        --info: #4299E1;
        --warning: #ED8936;
    }

    .header-section {
        background: var(--coral-gradient);
        border-radius: 16px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 8px 25px rgba(255, 107, 74, 0.15);
    }

    .header-title {
        color: white;
        font-size: 2.25rem;
        font-weight: 700;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .header-subtitle {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.1rem;
        margin-top: 0.5rem;
        margin-bottom: 0;
    }

    .filters-card {
        background: white;
        border-radius: 16px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--border-light);
    }

    .filters-title {
        color: var(--text-dark);
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .form-label {
        color: var(--text-dark);
        font-weight: 500;
        margin-bottom: 0.5rem;
    }

    .form-control, .form-select {
        border: 2px solid var(--border-light);
        border-radius: 8px;
        padding: 0.75rem 1rem;
        transition: all 0.2s ease;
        font-size: 0.95rem;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-coral);
            box-shadow: 0 0 0 3px rgba(255, 107, 74, 0.1);
            outline: none;
        }

    .btn-primary {
        background: var(--coral-gradient);
        border: none;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(255, 107, 74, 0.3);
    }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(255, 107, 74, 0.4);
            background: linear-gradient(135deg, #E55A42 0%, #FF6B4A 100%);
        }

    .btn-outline-secondary {
        border: 2px solid var(--border-light);
        color: var(--text-muted);
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        background: white;
        transition: all 0.2s ease;
    }

        .btn-outline-secondary:hover {
            border-color: var(--primary-coral);
            color: var(--primary-coral);
            background: rgba(255, 107, 74, 0.05);
        }

    .export-buttons {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .btn-success {
        background: linear-gradient(135deg, var(--success) 0%, #38A169 100%);
        border: none;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        color: white;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(72, 187, 120, 0.3);
    }

        .btn-success:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(72, 187, 120, 0.4);
        }

    .btn-danger {
        background: linear-gradient(135deg, #E53E3E 0%, #C53030 100%);
        border: none;
        border-radius: 8px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        color: white;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(229, 62, 62, 0.3);
    }

        .btn-danger:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(229, 62, 62, 0.4);
        }

    .campaign-card {
        background: white;
        border-radius: 16px;
        margin-bottom: 2rem;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--border-light);
        transition: all 0.3s ease;
    }

        .campaign-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
        }

    .campaign-header {
        background: var(--coral-gradient);
        color: white;
        padding: 1.5rem 2rem;
        font-size: 1.25rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .campaign-body {
        padding: 2rem;
    }

    .summary-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .stat-card {
        background: var(--bg-light);
        border-radius: 12px;
        padding: 1.5rem;
        border-left: 4px solid var(--primary-coral);
    }

    .stat-label {
        color: var(--text-muted);
        font-size: 0.85rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.5rem;
    }

    .stat-value {
        color: var(--text-dark);
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
    }

    .donation-item {
        background: rgba(66, 153, 225, 0.05);
        border-left: 4px solid var(--info);
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .donor-name {
        color: var(--text-dark);
        font-size: 1.1rem;
        font-weight: 600;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .donation-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .detail-item {
        display: flex;
        flex-direction: column;
    }

    .detail-label {
        color: var(--text-muted);
        font-size: 0.8rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .detail-value {
        color: var(--text-dark);
        font-weight: 600;
        font-size: 1rem;
    }

    .assignments-section {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid var(--border-light);
    }

    .assignments-title {
        color: var(--text-dark);
        font-weight: 600;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .assignment-list {
        display: grid;
        gap: 0.75rem;
    }

    .assignment-item {
        background: white;
        border: 1px solid var(--border-light);
        border-radius: 8px;
        padding: 1rem;
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr 1fr;
        gap: 1rem;
        align-items: center;
        font-size: 0.9rem;
    }

        .assignment-item .item-desc {
            font-weight: 600;
            color: var(--text-dark);
        }

    .no-data-alert {
        background: linear-gradient(135deg, rgba(66, 153, 225, 0.1) 0%, rgba(66, 153, 225, 0.05) 100%);
        border: 1px solid rgba(66, 153, 225, 0.2);
        border-radius: 12px;
        padding: 2rem;
        text-align: center;
        color: var(--info);
        font-size: 1.1rem;
    }

    /* Responsive styles for mobile devices */
    .mobile-responsive .header-section {
        padding: 1.5rem;
    }

    .mobile-responsive .header-title {
        font-size: 1.75rem;
    }

    .mobile-responsive .filters-card {
        padding: 1.5rem;
    }

    .mobile-responsive .export-buttons {
        flex-direction: column;
    }

    .mobile-responsive .summary-stats {
        grid-template-columns: 1fr;
    }

    .mobile-responsive .donation-details {
        grid-template-columns: 1fr;
    }

    .mobile-responsive .assignment-item {
        grid-template-columns: 1fr;
        gap: 0.5rem;
    }
</style>

<div class="header-section">
    <h1 class="header-title">
        <i class="bi bi-cash-stack"></i>
        Cierre de Caja General
    </h1>
    <p class="header-subtitle">Monitoreo y análisis detallado de donaciones y asignaciones por campaña</p>
</div>

<div class="filters-card">
    <h3 class="filters-title">
        <i class="bi bi-funnel"></i>
        Filtros de Búsqueda
    </h3>

    <form asp-action="Index" method="get" class="row g-3 align-items-end">
        <div class="col-md-3">
            <label for="filtroCampania" class="form-label">Campaña</label>
            <select name="filtroCampania" class="form-select">
                <option value="">-- Todas las campañas --</option>
                @foreach (var c in campañas)
                {
                    <option value="@c" selected="@(filtroCampania == c ? "selected" : null)">@c</option>
                }
            </select>
        </div>

        <div class="col-md-2">
            <label for="desde" class="form-label">Fecha desde</label>
            <input type="date" name="desde" class="form-control" value="@desde" />
        </div>

        <div class="col-md-2">
            <label for="hasta" class="form-label">Fecha hasta</label>
            <input type="date" name="hasta" class="form-control" value="@hasta" />
        </div>

        <div class="col-md-2">
            <label for="periodo" class="form-label">Período predefinido</label>
            <select id="periodo" name="periodo" class="form-select" onchange="ajustarFechas(this)">
                @foreach (var p in periodos)
                {
                    <option value="@p.Valor" selected="@(periodoSeleccionado == p.Valor ? "selected" : null)">@p.Texto</option>
                }
            </select>
        </div>

        <div class="col-md-3 d-flex gap-2">
            <button type="submit" class="btn btn-primary w-100">
                <i class="bi bi-search"></i> Aplicar filtros
            </button>
            <a asp-action="Index" class="btn btn-outline-secondary w-100">
                <i class="bi bi-arrow-clockwise"></i> Reiniciar
            </a>
        </div>
    </form>
</div>

@if (Model != null && Model.Any())
{
    <div class="export-buttons">
        <a asp-action="ExportarExcel"
           asp-route-filtroCampania="@filtroCampania"
           asp-route-desde="@desde"
           asp-route-hasta="@hasta"
           class="btn btn-success">
            <i class="bi bi-file-earmark-excel"></i> Exportar a Excel
        </a>
        <a asp-action="ExportarPdf"
           asp-route-filtroCampania="@filtroCampania"
           asp-route-desde="@desde"
           asp-route-hasta="@hasta"
           class="btn btn-danger">
            <i class="bi bi-file-earmark-pdf"></i> Exportar a PDF
        </a>
    </div>

    @foreach (var camp in Model)
    {
        <div class="campaign-card">
            <div class="campaign-header">
                <i class="bi bi-bookmark-star"></i>
                Campaña: @camp.Campania
            </div>
            <div class="campaign-body">
                <div class="summary-stats">
                    <div class="stat-card">
                        <div class="stat-label">Total Donado</div>
                        <p class="stat-value">Bs @camp.MontoDonado.ToString("N2")</p>
                    </div>
                    <div class="stat-card">
                        <div class="stat-label">Total Asignado</div>
                        <p class="stat-value">Bs @camp.MontoAsignado.ToString("N2")</p>
                    </div>
                    <div class="stat-card">
                        <div class="stat-label">Saldo Disponible</div>
                        <p class="stat-value">Bs @camp.SaldoRestante.ToString("N2")</p>
                    </div>
                </div>

                @foreach (var don in camp.Donaciones)
                {
                    <div class="donation-item">
                        <div class="donor-name">
                            <i class="bi bi-person-circle"></i>
                            @don.Nombre
                        </div>

                        <div class="donation-details">
                            <div class="detail-item">
                                <span class="detail-label">Fecha</span>
                                <span class="detail-value">@don.Fecha.ToString("dd/MM/yyyy")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Monto</span>
                                <span class="detail-value">Bs @don.Monto.ToString("N2")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Asignado</span>
                                <span class="detail-value">Bs @don.Asignado.ToString("N2")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Saldo</span>
                                <span class="detail-value">Bs @don.Saldo.ToString("N2")</span>
                            </div>
                        </div>

                        @if (don.Asignaciones != null && don.Asignaciones.Any())
                        {
                            <div class="assignments-section">
                                <div class="assignments-title">
                                    <i class="bi bi-list-check"></i>
                                    Detalle de Asignaciones
                                </div>
                                <div class="assignment-list">
                                    @foreach (var asig in don.Asignaciones)
                                    {
                                        <div class="assignment-item">
                                            <div class="item-desc">@asig.Descripcion</div>
                                            <div>Cant: @asig.Cantidad</div>
                                            <div>Unit: Bs @asig.PrecioUnitario.ToString("N2")</div>
                                            <div>Total: Bs @asig.Total.ToString("N2")</div>
                                            <div>@asig.Fecha.ToString("dd/MM/yyyy")</div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    }
}
else
{
    <div class="no-data-alert">
        <i class="bi bi-info-circle" style="font-size: 2rem; margin-bottom: 1rem;"></i>
        <p style="margin: 0; font-weight: 500;">No hay registros que coincidan con los filtros aplicados.</p>
        <p style="margin: 0.5rem 0 0 0; opacity: 0.8;">Intenta ajustar los criterios de búsqueda para obtener resultados.</p>
    </div>
}

<script>
    function ajustarFechas(select) {
        const tipo = select.value;
        const hoy = new Date();
        let desde = new Date();

        switch (tipo) {
            case 'semana':
                desde.setDate(hoy.getDate() - 7);
                break;
            case 'mes':
                desde = new Date(hoy.getFullYear(), hoy.getMonth(), 1);
                break;
            case 'trimestre':
                const mes = hoy.getMonth();
                const trimestreInicio = mes - (mes % 3);
                desde = new Date(hoy.getFullYear(), trimestreInicio, 1);
                break;
            case 'anio':
                desde = new Date(hoy.getFullYear(), 0, 1);
                break;
            default:
                return;
        }

        const format = (fecha) => fecha.toISOString().split('T')[0];
        document.querySelector("input[name='desde']").value = format(desde);
        document.querySelector("input[name='hasta']").value = format(hoy);
    }
</script>